name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Build release
        run: |
          cd ouro_dag
          cargo build --release

      - name: Package artifact (Linux / mac)
        if: runner.os != 'Windows'
        run: |
          cd ouro_dag/target/release
          mkdir -p dist
          if [ "${{ runner.os }}" = "Linux" ]; then
            cp ouro-node dist/ouro-node-linux-x86_64 || true
            tar -czf ouro-node-linux-x86_64.tar.gz -C dist ouro-node-linux-x86_64 || true
            ls -l
          elif [ "${{ runner.os }}" = "macOS" ]; then
            cp ouro-node dist/ouro-node-macos-x86_64 || true
            tar -czf ouro-node-macos-x86_64.tar.gz -C dist ouro-node-macos-x86_64 || true
            ls -l
          fi

      - name: Package artifact (Windows)
        if: runner.os == 'Windows'
        run: |
          cd ouro_dag/target/release
          powershell -Command "Compress-Archive -Path ouro-node.exe -DestinationPath ouro-node-windows-x86_64.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "ouro-node-${{ matrix.os }}"
          path: |
            ouro_dag/target/release/*.tar.gz
            ouro_dag/target/release/*.zip
            ouro_dag/target/release/ouro-node*
