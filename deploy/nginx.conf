user  nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events { worker_connections 1024; }

http {
  upstream ouro_api {
    # these hostnames must resolve in the nginx container network -- names from docker-compose services
    server node1:8001;
    server node2:8002;
  }

  # rate limit zone (per IP)
  limit_req_zone $binary_remote_addr zone=one:10m rate=200r/s;

  server {
    listen 443 ssl;
    server_name ouroboros.example.com;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # adjust TLS ciphers/params for production as needed.

    location /api/ {
      proxy_pass http://ouro_api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_read_timeout 90s;
      proxy_send_timeout 90s;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;

      limit_req zone=one burst=50 nodelay;
    }

    # optional health endpoint proxied
    location /health {
      proxy_pass http://node1:8001/health;
    }
  }

  # optional: redirect HTTP to HTTPS
  server {
    listen 80;
    server_name ouroboros.example.com;
    return 301 https://$host$request_uri;
  }
}
