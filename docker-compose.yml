version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: ouro_postgres
    environment:
      POSTGRES_USER: ouro
      POSTGRES_PASSWORD: ouro_pass
      POSTGRES_DB: ouro_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    ports:
      - "15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ouro -d ouro_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - ouro_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: ouro_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - ouro_net

  ouro_node_base:
    build:
      context: ./ouro_dag
      dockerfile: Dockerfile
    image: ouro_node_image:latest
    entrypoint: ["bash","-c","exit 0"]

  node1:
    image: ouro_node_image:latest
    container_name: ouro_node1
    environment:
      LISTEN_ADDR: 0.0.0.0:9001
      PEER_ADDRS: node2:9002
      ROCKSDB_PATH: /data/rocksdb
      DATABASE_URL: postgres://ouro:ouro_pass@postgres:5432/ouro_db
      API_ADDR: 0.0.0.0:8001
      USE_REAL_CRYPTO: "1"
      PG_HOST: postgres
      PG_PORT: "5432"
      PG_USER: "ouro"
    ports:
      - "9001:9001"
      - "8001:8001"
    volumes:
      - node1_data:/data
    depends_on:
      - postgres
    # run migration script packaged into image, then exec binary
    command: ["bash", "-c", "/app/scripts/run_migrations.sh"]
    restart: on-failure
    networks:
      - ouro_net

  node2:
    image: ouro_node_image:latest
    container_name: ouro_node2
    environment:
      LISTEN_ADDR: 0.0.0.0:9002
      PEER_ADDRS: node1:9001
      ROCKSDB_PATH: /data/rocksdb
      DATABASE_URL: postgres://ouro:ouro_pass@postgres:5432/ouro_db
      API_ADDR: 0.0.0.0:8002
      USE_REAL_CRYPTO: "1"
      PG_HOST: postgres
      PG_PORT: "5432"
      PG_USER: "ouro"
    ports:
      - "9002:9002"
      - "8002:8002"
    volumes:
      - node2_data:/data
    depends_on:
      - postgres
    command: ["bash", "-c", "/app/scripts/run_migrations.sh"]
    restart: on-failure
    networks:
      - ouro_net

networks:
  ouro_net:
    driver: bridge

volumes:
  postgres_data:
  node1_data:
  node2_data:
